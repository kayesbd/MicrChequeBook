/*
International Telephone Input v2.0.10
https://github.com/Bluefieldscom/intl-tel-input.git
*/
!function (a) { "function" == typeof define && define.amd ? define(["jquery"], function (b) { a(b, window, document) }) : a(jQuery, window, document) }(function (a, b, c, d) { "use strict"; function e(b, c) { this.element = b, this.options = a.extend({}, h, c), this._defaults = h, this.ns = "." + f + g++, this.isGoodBrowser = Boolean(b.setSelectionRange), this._name = f, this.init() } var f = "intlTelInput", g = 1, h = { autoFormat: !1, autoHideDialCode: !0, defaultCountry: "", nationalMode: !1, onlyCountries: [], preferredCountries: ["us", "gb"], responsiveDropdown: !1, utilsScript: "" }, i = { UP: 38, DOWN: 40, ENTER: 13, ESC: 27, PLUS: 43, A: 65, Z: 90, ZERO: 48, NINE: 57, SPACE: 32, BSPACE: 8, DEL: 46, CTRL: 17, CMD1: 91, CMD2: 224 }, j = !1; a(b).load(function () { j = !0 }), e.prototype = { init: function () { this.options.nationalMode && (this.options.autoFormat = this.options.autoHideDialCode = !1), navigator.userAgent.match(/Android/i) && navigator.userAgent.match(/Chrome/i) && (this.options.autoFormat = !1), this._processCountryData(), this._generateMarkup(), this._setInitialState(), this._initListeners() }, _processCountryData: function () { this._setInstanceCountryData(), this._setPreferredCountries() }, _setInstanceCountryData: function () { var b = this; if (this.options.onlyCountries.length) { var c, d, e = [], f = {}; for (d = 0; d < this.options.onlyCountries.length; d++) { var g = this.options.onlyCountries[d], h = b._getCountryData(g, !0, !1); h && (e.push(h), c = h.dialCode, f[c] ? f[c].push(g) : f[c] = [g]) } for (c in f) if (f[c].length > 1) { var i = []; for (d = 0; d < l[c].length; d++) { var j = l[c][d]; a.inArray(f[c], j) && i.push(j) } f[c] = i } this.countries = e, this.countryCodes = f } else this.countries = k, this.countryCodes = l }, _setPreferredCountries: function () { var a = this; this.preferredCountries = []; for (var b = 0; b < this.options.preferredCountries.length; b++) { var c = this.options.preferredCountries[b], d = a._getCountryData(c, !1, !0); d && a.preferredCountries.push(d) } }, _generateMarkup: function () { this.telInput = a(this.element), this.telInput.wrap(a("<div>", { "class": "intl-tel-input" })); var b = a("<div>", { "class": "flag-dropdown" }).insertAfter(this.telInput), c = a("<div>", { "class": "selected-flag" }).appendTo(b); this.selectedFlagInner = a("<div>", { "class": "flag" }).appendTo(c), a("<div>", { "class": "arrow" }).appendTo(this.selectedFlagInner), this.countryList = a("<ul>", { "class": "country-list v-hide" }).appendTo(b), this.preferredCountries.length && (this._appendListItems(this.preferredCountries, "preferred"), a("<li>", { "class": "divider" }).appendTo(this.countryList)), this._appendListItems(this.countries, ""), this.dropdownHeight = this.countryList.outerHeight(), this.countryList.removeClass("v-hide").addClass("hide"), this.options.responsiveDropdown && this.countryList.outerWidth(this.telInput.outerWidth()), this.countryListItems = this.countryList.children(".country") }, _appendListItems: function (a, b) { for (var c = "", d = 0; d < a.length; d++) { var e = a[d]; c += "<li class='country " + b + "' data-dial-code='" + e.dialCode + "' data-country-code='" + e.iso2 + "'>", c += "<div class='flag " + e.iso2 + "'></div>", c += "<span class='country-name'>" + e.name + "</span>", c += "<span class='dial-code'>+" + e.dialCode + "</span>", c += "</li>" } this.countryList.append(c) }, _setInitialState: function () { var a = this.telInput.val(); if (!a || !this.setNumber(a)) { var b; b = this.options.defaultCountry ? this._getCountryData(this.options.defaultCountry, !1, !1) : this.preferredCountries.length ? this.preferredCountries[0] : this.countries[0], this._selectFlag(b.iso2), a || this.options.autoHideDialCode || this._resetToDialCode(b.dialCode) } }, _initListeners: function () { var c = this; this.options.autoHideDialCode && this._initAutoHideDialCode(); var d = this.telInput.closest("label"); d.length && d.on("click" + this.ns, function (a) { c.countryList.hasClass("hide") ? c.telInput.focus() : a.preventDefault() }), this.options.autoFormat && this.telInput.on("keypress" + this.ns, function (a) { if (a.which >= i.SPACE) { a.preventDefault(); var b = a.which >= i.ZERO && a.which <= i.NINE, d = c.telInput[0], e = c.isGoodBrowser && d.selectionStart == d.selectionEnd; if (b || e) { var f = b ? String.fromCharCode(a.which) : null; c._handleInputKey(f) } } }), this.telInput.on("keyup" + this.ns, function (a) { if (c.options.autoFormat) { var b = a.which == i.CTRL || a.which == i.CMD1 || a.which == i.CMD2, d = c.telInput[0], e = c.isGoodBrowser && d.selectionStart == d.selectionEnd, f = c.isGoodBrowser && d.selectionStart == c.telInput.val().length; if (a.which == i.DEL || a.which == i.BSPACE || b && e) { { a.which == i.BSPACE && f } c._handleInputKey(null) } var g = c.telInput.val(); "+" != g.substr(0, 1) && c.telInput.val("+" + g) } else c._updateFlag() }); var e = this.selectedFlagInner.parent(); if (e.on("click" + this.ns, function () { c.countryList.hasClass("hide") && !c.telInput.prop("disabled") && c._showDropdown() }), this.options.utilsScript && !a.fn[f].injectedUtilsScript) { a.fn[f].injectedUtilsScript = !0; var g = function () { a.getScript(c.options.utilsScript, function () { a(".intl-tel-input input").intlTelInput("utilsLoaded") }) }; j ? g() : a(b).load(g) } }, _handleInputKey: function (a) { var b = this.telInput.val(), c = null, d = !1, e = this.telInput[0]; if (this.isGoodBrowser) { var f = e.selectionEnd, g = b.length; d = f == g, a ? (b = b.substring(0, e.selectionStart) + a + b.substring(f, g), d || (c = f + (b.length - g))) : c = e.selectionStart } else a && (b += a); this.setNumber(b), this.isGoodBrowser && (d && (c = this.telInput.val().length), e.setSelectionRange(c, c)) }, _initAutoHideDialCode: function () { var a = this; this.telInput.on("mousedown" + this.ns, function (b) { a.telInput.is(":focus") || a.telInput.val() || (b.preventDefault(), a.telInput.focus()) }), this.telInput.on("focus" + this.ns, function () { a.telInput.val() || (a._updateVal("+" + a.selectedCountryData.dialCode), a.telInput.one("keypress.plus" + a.ns, function (b) { b.which == i.PLUS && a.telInput.val("+") }), setTimeout(function () { a._cursorToEnd() })) }), this.telInput.on("blur" + this.ns, function () { var b = a.telInput.val(), c = "+" == b.substr(0, 1); if (c) { var d = b.replace(/\D/g, ""); d && a.selectedCountryData.dialCode != d || a.telInput.val("") } a.telInput.off("keypress.plus" + a.ns) }) }, _cursorToEnd: function () { var a = this.telInput[0]; if (this.isGoodBrowser) { var b = this.telInput.val().length; a.setSelectionRange(b, b) } }, _showDropdown: function () { this._setDropdownPosition(); var a = this.countryList.children(".active"); this._highlightListItem(a), this.countryList.removeClass("hide"), this._scrollTo(a), this._bindDropdownListeners(), this.selectedFlagInner.children(".arrow").addClass("up") }, _setDropdownPosition: function () { var c = this.telInput.offset().top, d = a(b).scrollTop(), e = c + this.telInput.outerHeight() + this.dropdownHeight < d + a(b).height(), f = c - this.dropdownHeight > d, g = !e && f ? "-" + (this.dropdownHeight - 1) + "px" : ""; this.countryList.css("top", g) }, _bindDropdownListeners: function () { var b = this; this.countryList.on("mouseover" + this.ns, ".country", function () { b._highlightListItem(a(this)) }), this.countryList.on("click" + this.ns, ".country", function () { b._selectListItem(a(this)) }); var d = !0; a("html").on("click" + this.ns, function () { d || b._closeDropdown(), d = !1 }); var e = "", f = null; a(c).on("keydown" + this.ns, function (a) { a.preventDefault(), a.which == i.UP || a.which == i.DOWN ? b._handleUpDownKey(a.which) : a.which == i.ENTER ? b._handleEnterKey() : a.which == i.ESC ? b._closeDropdown() : (a.which >= i.A && a.which <= i.Z || a.which == i.SPACE) && (f && clearTimeout(f), e += String.fromCharCode(a.which), b._searchForCountry(e), f = setTimeout(function () { e = "" }, 1e3)) }) }, _handleUpDownKey: function (a) { var b = this.countryList.children(".highlight").first(), c = a == i.UP ? b.prev() : b.next(); c.length && (c.hasClass("divider") && (c = a == i.UP ? c.prev() : c.next()), this._highlightListItem(c), this._scrollTo(c)) }, _handleEnterKey: function () { var a = this.countryList.children(".highlight").first(); a.length && this._selectListItem(a) }, _searchForCountry: function (a) { for (var b = 0; b < this.countries.length; b++) if (this._startsWith(this.countries[b].name, a)) { var c = this.countryList.children("[data-country-code=" + this.countries[b].iso2 + "]").not(".preferred"); this._highlightListItem(c), this._scrollTo(c, !0); break } }, _startsWith: function (a, b) { return a.substr(0, b.length).toUpperCase() == b }, _updateVal: function (c) { var d; d = this.options.autoFormat && b.intlTelInputUtils ? a.trim(intlTelInputUtils.formatNumber(c)) : c, this.telInput.val(d) }, _updateFlag: function (a) { var b = this._getDialCode(a); if (b) { var c = this.countryCodes[b.replace(/\D/g, "")], d = !1; if (!this.selectedCountryData || !this.selectedCountryData.hasAreaCodes) for (var e = 0; e < c.length; e++) this.selectedFlagInner.hasClass(c[e]) && (d = !0); d || this._selectFlag(c[0]) } return b }, _resetToDialCode: function (a) { var b = this.options.nationalMode ? "" : "+" + a; this.telInput.val(b) }, _highlightListItem: function (a) { this.countryListItems.removeClass("highlight"), a.addClass("highlight") }, _getCountryData: function (a, b, c) { for (var d = b ? k : this.countries, e = 0; e < d.length; e++) if (d[e].iso2 == a) return d[e]; if (c) return null; throw new Error("No country data for '" + a + "'") }, _selectFlag: function (a) { this.selectedFlagInner.attr("class", "flag " + a), this.selectedCountryData = this._getCountryData(a, !1, !1); var b = this.selectedCountryData.name + ": +" + this.selectedCountryData.dialCode; this.selectedFlagInner.parent().attr("title", b); var c = this.countryListItems.children(".flag." + a).first().parent(); this.countryListItems.removeClass("active"), c.addClass("active") }, _selectListItem: function (a) { var b = a.attr("data-country-code"); this._selectFlag(b), this._closeDropdown(), this.options.nationalMode || this._updateDialCode("+" + a.attr("data-dial-code")), this.telInput.trigger("change"), this.telInput.focus(), this._cursorToEnd() }, _closeDropdown: function () { this.countryList.addClass("hide"), this.selectedFlagInner.children(".arrow").removeClass("up"), a(c).off(this.ns), a("html").off(this.ns), this.countryList.off(this.ns) }, _scrollTo: function (a, b) { var c = this.countryList, d = c.height(), e = c.offset().top, f = e + d, g = a.outerHeight(), h = a.offset().top, i = h + g, j = h - e + c.scrollTop(), k = d / 2 - g / 2; if (e > h) b && (j -= k), c.scrollTop(j); else if (i > f) { b && (j += k); var l = d - g; c.scrollTop(j - l) } }, _updateDialCode: function (b) { var c, d = this.telInput.val(), e = this._getDialCode(); if (e.length > 1) c = d.replace(e, b); else { var f = d && "+" != d.substr(0, 1) ? a.trim(d) : ""; c = b + f } this._updateVal(c) }, _getDialCode: function (b) { var c = "", d = b || this.telInput.val(); if ("+" == d.charAt(0)) for (var e = "", f = 0; f < d.length; f++) { var g = d.charAt(f); if (a.isNumeric(g) && (e += g, this.countryCodes[e] && (c = d.substring(0, f + 1)), 4 == e.length)) break } return c }, destroy: function () { this._closeDropdown(), this.telInput.off(this.ns), this.selectedFlagInner.parent().off(this.ns), this.telInput.closest("label").off(this.ns); var a = this.telInput.parent(); a.before(this.telInput).remove() }, getSelectedCountryData: function () { return this.selectedCountryData }, isValidNumber: function (c) { var d = a.trim(this.telInput.val()), e = c ? this.selectedCountryData.iso2 : "", f = /[a-zA-Z]/.test(d); return !f && b.intlTelInputUtils && intlTelInputUtils.isValidNumber(d, e) }, selectCountry: function (a) { this.selectedFlagInner.hasClass(a) || (this._selectFlag(a), this.telInput.val() || this.options.autoHideDialCode || this._resetToDialCode(this.selectedCountryData.dialCode)) }, setNumber: function (a) { var b = this._updateFlag(a); return this._updateVal(a), b }, utilsLoaded: function () { this.options.autoFormat && this.telInput.val() && this._updateVal(this.telInput.val()) } }, a.fn[f] = function (b) { var c = arguments; if (b === d || "object" == typeof b) return this.each(function () { a.data(this, "plugin_" + f) || a.data(this, "plugin_" + f, new e(this, b)) }); if ("string" == typeof b && "_" !== b[0] && "init" !== b) { var g; return this.each(function () { var d = a.data(this, "plugin_" + f); d instanceof e && "function" == typeof d[b] && (g = d[b].apply(d, Array.prototype.slice.call(c, 1))), "destroy" === b && a.data(this, "plugin_" + f, null) }), g !== d ? g : this } }, a.fn[f].getCountryData = function () { return k }, a.fn[f].setCountryData = function (a) { k = a }; for (var k = [["Bangladesh (বাংলাদেশ)", "bd", "880"]], l = {}, m = (function (a, b, c) { b in l || (l[b] = []); var d = c || 0; l[b][d] = a }), n = 0; n < k.length; n++) { var o = k[n]; if (k[n] = { name: o[0], iso2: o[1], dialCode: o[2] }, o[4]) { k[n].hasAreaCodes = !0; for (var p = 0; p < o[4].length; p++) { var q = o[2] + o[4][p]; m(o[1], q) } } m(o[1], o[2], o[3]) } });